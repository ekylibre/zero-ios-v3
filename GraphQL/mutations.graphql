mutation pushInter(
  $farmID: ID!,
  $procedure: InterventionTypeEnum!,
  $cropList: [InterventionTargetAttributes!]!,
  $workingDays: [InterventionWorkingDayAttributes!],
  $waterQuantity: Int,
  $waterUnit: InterventionWaterVolumeUnitEnum,
  $inputs: [InterventionInputAttributes!],
  $outputs: [InterventionOutputAttributes!],
  $globalOutputs: Boolean,
  $tools: [InterventionToolAttributes!],
  $operators: [InterventionOperatorAttributes!],
  $weather: WeatherAttributes,
  $description: String
)
  {
  createIntervention(
    input: {
      intervention: {
        farmID: $farmID
        type: $procedure
        targets: $cropList
        workingDays: $workingDays
        waterQuantity: $waterQuantity
        waterUnit: $waterUnit
        inputs: $inputs
        outputs: $outputs
        globalOutputs: $globalOutputs
        tools: $tools
        operators: $operators
        weather: $weather
        description: $description
      }
    }
  ) {
    errors,
    intervention {
      id
    }
  }
}

mutation updateInter(
  $interventionID: ID!
  $farmID: ID!,
  $procedure: InterventionTypeEnum!,
  $cropList: [InterventionTargetAttributes!]!,
  $workingDays: [InterventionWorkingDayAttributes!],
  $waterQuantity: Int,
  $waterUnit: ArticleVolumeUnitEnum,
  $inputs: [InterventionInputAttributes!],
  $outputs: [InterventionOutputAttributes!],
  $tools: [InterventionToolAttributes!],
  $operators: [InterventionOperatorAttributes!],
  $weather: WeatherAttributes,
  $description: String
)
  {
  updateIntervention(
    input: {
      intervention: {
        interventionID: $interventionID
        farmID: $farmID
        type: $procedure
        targets: $cropList
        workingDays: $workingDays
        waterQuantity: $waterQuantity
        waterUnit: $waterUnit
        inputs: $inputs
        outputs: $outputs
        tools: $tools
        operators: $operators
        weather: $weather
        description: $description
      }
    }
  ) {
    errors
  }
}

mutation deleteInter(
  $id: ID!,
  $farmID: ID!
) {
  deleteIntervention(
    input: {
      id: $id
      farmID: $farmID
    }
  ) {
    errors,
    message
  }
}

mutation pushEquipment(
  $farmID: ID!,
  $type: EquipmentTypeEnum!,
  $name: String!,
  $number: String,
  $indicator1: String,
  $indicator2: String
) {
  createEquipment(
    input: {
      equipment: {
        farmID: $farmID
        type: $type
        name: $name
        number: $number
        field1Value: $indicator1
        field2Value: $indicator2
      }
    }
  ) {
    errors,
    equipment {
      id
    }
  }
}

mutation updateEquipment(
  $id: ID!,
  $farmID: ID!,
  $type: EquipmentTypeEnum!,
  $name: String!,
  $number: String,
  $indicator1: String,
  $indicator2: String
) {
  updateEquipment(
    input: {
      equipment: {
        id: $id
        farmID: $farmID
        type: $type
        name: $name
        number: $number
        field1Value: $indicator1
        field2Value: $indicator2
      }
    }
  ) {
    errors
  }
}

mutation deleteEquipment(
  $id: ID!,
  $farmID: ID!
) {
  deleteEquipment(
    input: {
      id: $id
      farmID: $farmID
    }
  ) {
    errors,
    message
  }
}

mutation pushArticle(
  $farmID: ID!,
  $unit: ArticleUnitEnum!,
  $name: String!,
  $type: ArticleTypeEnum!,
  $specie: SpecieEnum,
  $variety: String
) {
  createArticle(
    input: {
      article: {
        farmID: $farmID
        unit: $unit
        name: $name
        nature: $type
        species: $specie
        variety: $variety
      }
    }
  ) {
    errors,
    article {
      id
    }
  }
}

mutation pushPerson(
  $farmID: ID!,
  $firstName: String
  $lastName: String!
) {
  createPerson(
    input: {
      person: {
        farmID: $farmID
        firstName: $firstName
        lastName: $lastName
      }
    }
  ) {
    errors,
    person {
      id
    }
  }
}

mutation pushStorage(
  $farmID: ID!,
  $type: StorageTypeEnum,
  $name: String!,
) {
  createStorage(
    input: {
      storage: {
        farmID: $farmID
        type: $type
        name: $name
      }
    }
  ) {
    errors,
    storage {
      id
    }
  }
}
